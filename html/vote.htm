<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Votes, Votes, Votes!</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="description" content="">
	<meta name="author" content="">

<!-- Styles -->
	<link href="/assets/bootstrap/css/bootstrap.css" rel="stylesheet">
	<style type="text/css">
      body {
        padding-top: 60px;
        padding-bottom: 40px;
      }
      .caption {
      	text-align:center;   
      }
    </style>
    
<!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
<!--[if lt IE 9]>
	<script src="/assets/bootstrap/js/html5shiv.js"></script>
<![endif]-->

</head>

<body>

<div class="container">

	<div class="row">
	
		<div class="col-xs-12 col-sm-4 col-md-4 pollOption"
			data-content="some popover content"
			rel="popover"
			>
			<div class="thumbnail">
				<div class="caption">
					<h3>Option A</h3>
					<p>Hover for more info</p>
					<p>
						<a href="#" class="btn btn-primary vote">Vote!</a>
					</p>
				</div>
			</div>
		</div>
		
		<div class="col-xs-12 col-sm-4 col-md-4 pollOption">
			<div class="thumbnail">
				<div class="caption">
					<h3>Option B</h3>
					<p>Hover for more info</p>
					<p>
						<a href="#" class="btn btn-primary vote">Vote!</a>
					</p>
				</div>
			</div>
		</div>
		
		<div class="col-xs-12 col-sm-4 col-md-4 pollOption">
			<div class="thumbnail">
				<div class="caption">
					<h3>Option C</h3>
					<p>Hover for more info</p>
					<p>
						<a href="#" class="btn btn-primary vote">Vote!</a>
					</p>
				</div>
			</div>
		</div>
		
	</div>
	
	<div class="row">
	
		<div class="col-xs-12 col-sm-6 col-md-6 pollOption">
			<div class="thumbnail">
				<div class="caption">
					<h3>Option D</h3>
					<p>Hover for more info</p>
					<p>
						<a href="#" class="btn btn-primary vote">Vote!</a>
					</p>
				</div>
			</div>
		</div>
		
		<div class="col-xs-12 col-sm-6 col-md-6 pollOption">
			<div class="thumbnail">
				<div class="caption">
					<h3>Option E</h3>
					<p>Hover for more info</p>
					<p>
						<a href="#" class="btn btn-primary vote">Vote!</a>
					</p>
				</div>
			</div>
		</div>
		
	</div>
	
	
	
</div>





<!-- Placed at the end of the document so the pages load faster -->
<!-- <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script> -->
<script src="/assets/bootstrap/js/jquery.min.js"></script>
<script src="/assets/bootstrap/js/heatmap.js"></script>
<script src="/assets/bootstrap/js/tooltip.js"></script>
<script src="/assets/bootstrap/js/popover.js"></script>
<script src="/assets/custom/js/ExoHeatmap.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script type="text/javascript">


// Execute this closure once the DOM is loaded
$(function() {

	// Connect to the server
	var socket = io.connect(window.location.host);
	
	// Add our popups to the poll options
	$('.pollOption').popover({
		animation: true,
		trigger: 'hover',
		placement: 'top',
		
	});
	
	// Store the current time in milliseconds when the mouse starts hovering over an option
	$('.pollOption').mouseenter(function() { 
		$(this).data('enterDate', new Date());
		
		// So we get better data, fire a mouseleave event directly if they hover for a long time
		var el = $(this);
		$(this).data(
			'mouseleaveTimer', 
			setTimeout(function() {
				el.mouseleave();
			}, 15000)
		);
	});
	
	// When the mouse leaves an option, send the elapsed time to the server
	$('.pollOption').mouseleave(function() { 
		if(!$(this).data('enterDate')) { return; }
		var optionName = $('h3', $(this)).html().trim();
		var hoverTime = new Date() - $(this).data('enterDate');
		socket.emit('mouseleave', {
			option: optionName,
			time: hoverTime
		});
	});
	
	// Tell the server about our vote when a Vote button is clicked
	$('.vote').click(function() {
		var optionEl = $(this).parents('.pollOption');
		var optionName = $('h3', optionEl).html().trim();
		var hoverTime = new Date() - optionEl.data('enterDate');
		socket.emit('vote', {
			option: optionName,
			time: hoverTime
		});
		optionEl.removeData('enterDate');
	});
	
	// Create our Heatmap layer
	var exoHeatmap = new ExoHeatmap({
		mousemoveCallback: function(point) {
			// Tell the server (who will tell other clients) about our mousemove!
			socket.emit('mousemove', {
				point: point
			});
		},
		toggleDislayCallback: function(visible) {
			if(window.location.host == 'localhost') {
				socket.emit('heatmap:visible', visible);
			}
		}
	});

	// Listen for the announce event from other clients
	socket.on('announce', function(data) {
		console.log(data);
	});
	
	// Listen for heatmap events from other clients
	socket.on('heatmap:visible', function(visible) {
		console.log("Received heatmap:visible event with visible=" + visible);
		exoHeatmap.setVisible(visible);
	});
	socket.on('heatmap:setData', function(data) {
		console.log("Received heatmap:setData event");
		exoHeatmap.setData(data);
	});
	socket.on('heatmap:mousemove', function (point) {
		console.log("Received heatmap:mousemove event with point=" + JSON.stringify(point));
		// Draw the other client's mousemove on our local heatmap
		exoHeatmap.addPoint(point);
	});
	
	// Listen for the alert event from the server
	socket.on('alert', function(data) {
		alert(data.msg);
	});

	
	// Tell the server we're ready
	socket.emit('ready');
	
});


</script>
</body>
</html>
